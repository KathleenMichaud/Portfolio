<p data-words class="text-6xl relative">
    Je suis{" "}
    <strong class="block lg:inline h-[1em]" data-word>créative</strong>
    <span data-oops style="display:none;" class="text-purple font-cursive absolute -rotate-45 left-1/2 -translate-x-1/2">Oups!</span>
</p>
<script>
    const words = [ "créative", "innovante", "spontanée", "TDAH"];
    const containers = document.querySelectorAll('[data-words]');
    
    containers.forEach((container) => {
        const wordContainer = container.querySelector('[data-word]');
        const oops = container.querySelector('[data-oops]');
        let currentWordIndex = 0;
        let lastLetter;
        let timeout;

        function updateWord(content) {
            wordContainer.innerHTML = content;
        }

        function eraseLetter(letterIndex) {
            const lastWord = words[words.length - 1];
            updateWord(`${lastWord}`.substring(0, letterIndex + 1));
        }

        function eraseLastWord() {
            timeout = setTimeout(() => {
                if(lastLetter - 1 < -1) {
                    //@ts-ignore
                    oops.style.display = "none";
                    queueNextWord();
                } else {
                    lastLetter--;
                    eraseLetter(lastLetter);
                    eraseLastWord();
                }
            }, 400)
        }

        function queueNextWord() {
            
            timeout = setTimeout(() => {
                const isLastWord = currentWordIndex + 1 == words.length;
                currentWordIndex = isLastWord ? 0 : currentWordIndex + 1;

                if(isLastWord) {
                    const lastWord = words[words.length - 1];
                    lastLetter = lastWord.length - 1;
                    currentWordIndex = -1;

                    timeout = setTimeout(() => {
                        eraseLastWord();
                        //@ts-ignore
                        oops.style.display = "block";
                    }, 400);
                } else {
                    updateWord(words[currentWordIndex]);
                    queueNextWord();
                }
            }, 1000);
        }
        
        updateWord(words[0]);
        queueNextWord();
    })

  </script>